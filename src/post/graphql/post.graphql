type Query {
  getPosts(skip: Int, limit: Int): PostConnection
  getPublicPosts(skip: Int, limit: Int, category: String): PostConnection
  post(id: ID!): Post
  publicPost(url: String!): Post
}

type Mutation {
  createPost(createPostInput: CreatePostInput!): Post
  releasePost(id: ID!): Post
  takeDownPost(id: ID!): Post
  updatePost(id: ID!, updatePostInput: UpdatePostInput!): Post
}

type Post {
  id: ID
  title: String
  description: String
  releaseDate: String
  thumbnail: String
  url: String
  primaryColor: String
  recommendedPosts: PostConnection
  content: String
  category: String
  isPublic: Boolean
  author: UserProfile
  comments: CommentConnection
}

input CreatePostInput {
  title: String
  description: String
  releaseDate: String
  thumbnail: String
  url: String
  primaryColor: String
  content: String
}

input UpdatePostInput {
  title: String
  description: String
  releaseDate: String
  thumbnail: String
  url: String
  primaryColor: String
  content: String
  category: String
  recommendedPosts: [ID]
}

type PostConnection {
  edges: [PostEdge]
  totalCount: Int
}

type PostEdge {
  node: Post
}
