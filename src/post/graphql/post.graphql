type Query {
  getPosts(skip: Int, limit: Int): PostConnection
  getPublishedPosts(skip: Int, limit: Int): PostConnection
  post(id: ID!): Post
  publishedPost(id: ID!): Post
}

type Mutation {
  createPost(createPostInput: CreatePostInput!): Post
  updatePost(id: ID!, updatePostInput: UpdatePostInput!): Post
}

type Post {
  id: ID
  title: String
  description: String
  releaseDate: String
  thumbnail: String
  url: String
  primaryColor: String
  recommendations: PostConnection
  content: String
  category: String
}

input CreatePostInput {
  title: String
  description: String
  releaseDate: String
  thumbnail: String
  url: String
  primaryColor: String
  content: String
}

input UpdatePostInput {
  title: String
  description: String
  releaseDate: String
  thumbnail: String
  url: String
  primaryColor: String
  content: String
  category: String
}

type PostConnection {
  edges: [PostEdge]
  totalCount: Int
}

type PostEdge {
  node: Post
}
