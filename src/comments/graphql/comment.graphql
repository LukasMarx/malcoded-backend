type Comment {
  id: ID
  author: User
  post: Post
  content: String
  creationDate: String
  updateDate: String
  isAnswer: Boolean
  answers: CommentConnection
  deleted: Boolean
}

input CreateCommentInput {
  content: String
}

input UpdateCommentInput {
  content: String
}

type CommentConnection {
  edges: [CommentEdge]
  totalCount: Int
}

type CommentEdge {
  node: Comment
}

type Query {
  getComments(skip: Int, limit: Int): CommentConnection
  getCommentsForPost(postId: ID!, skip: Int, limit: Int): CommentConnection
  comment(id: ID!): Comment
}

type Mutation {
  createCommentForPost(
    postId: ID!
    createCommentInput: CreateCommentInput!
  ): Comment
  updateComment(
    commentId: ID!
    updateCommentInput: UpdateCommentInput!
  ): Comment
  deleteComment(commentId: ID!): ID
  answerComment(
    commentId: ID!
    createCommentInput: CreateCommentInput!
  ): Comment
  deleteAnswer(commentId: ID!, answerId: ID!): Comment
}
